###################################################################
#  These records control run/stop                                 # 
###################################################################
record(bo, "$(P)$(R)Run")
{
    field(PINI,  "1")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RUN_STOP")
    field(ZNAM, "Stop")
    field(ONAM, "Run")
}

record(bi, "$(P)$(R)Run_RBV")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RUN_STOP")
    field(ZNAM, "Done")
    field(ZSV,  "NO_ALARM")
    field(ONAM, "Running")
    field(OSV,  "MINOR")
    field(SCAN, "I/O Intr")
}

###################################################################
#  This record is the maximum array length                        # 
###################################################################

record(longin, "$(P)$(R)MaxArrayLength_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MAX_ARRAY_LENGTH")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records are the desired array length                     # 
###################################################################

record(longout, "$(P)$(R)ArrayLength")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARRAY_LENGTH")
}

record(longin, "$(P)$(R)ArrayLength_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARRAY_LENGTH")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records are the burst length                             # 
###################################################################

record(longout, "$(P)$(R)BurstLength")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BURST_LENGTH")
   field(VAL,  "5")
}

record(longin, "$(P)$(R)BurstLength_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BURST_LENGTH")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records are the loop period                              #
###################################################################
record(ao, "$(P)$(R)LoopPeriod")
{
   field(PINI, "1")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LOOP_PERIOD")
   field(PREC, "5")
   field(VAL,  "0.5")
}

record(ai, "$(P)$(R)LoopPeriod_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LOOP_PERIOD")
   field(PREC, "5")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records are the array data with and without ring buffer  #
###################################################################
#record(waveform, "$(P)$(R)ArrayDataRing")
#{
#    field(DTYP, "asynInt32ArrayIn")
#    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARRAY_DATA")
#    field(FTVL, "LONG")
#    field(NELM, "$(NELM)")
#    field(SCAN, "I/O Intr")
#    info(FIFO,  "$(RING_SIZE)")
#}

record(waveform, "$(P)$(R)ArrayDataNoRing")
{
    field(DTYP, "asynInt32ArrayIn")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARRAY_DATA")
    field(FTVL, "LONG")
    field(NELM, "$(NELM)")
    field(SCAN, "I/O Intr")
}
