menu(asynOctetTMOD) {
    choice(asynOctetTMOD_Write_Read,"Write/Read")
    choice(asynOctetTMOD_Write,"Write")
    choice(asynOctetTMOD_Read,"Read")
    choice(asynOctetTMOD_Flush,"Flush")
}
menu(asynOctetFMT) {
    choice(asynOctetFMT_ASCII,"ASCII")
    choice(asynOctetFMT_Binary,"Binary")
    choice(asynOctetFMT_Hybrid,"Hybrid")
}
menu(asynOctetTRACE) {
    choice(asynOctetTRACE_Off,"Off")
    choice(asynOctetTRACE_On,"On")
}
menu(serialBAUD) {
    choice(serialBAUD_300,"300")
    choice(serialBAUD_600,"600")
    choice(serialBAUD_1200,"1200")
    choice(serialBAUD_2400,"2400")
    choice(serialBAUD_4800,"4800")
    choice(serialBAUD_9600,"9600")
    choice(serialBAUD_19200,"19200")
    choice(serialBAUD_38400,"38400")
    choice(serialBAUD_57600,"57600")
    choice(serialBAUD_115200,"115200")
    choice(serialBAUD_230400,"230400")
}
menu(serialPRTY) {
    choice(serialPRTY_None,"None")
    choice(serialPRTY_Even,"Even")
    choice(serialPRTY_Odd,"Odd")
}
menu(serialDBIT) {
    choice(serialDBIT_5,"5")
    choice(serialDBIT_6,"6")
    choice(serialDBIT_7,"7")
    choice(serialDBIT_8,"8")
}
menu(serialSBIT) {
    choice(serialSBIT_1,"1")
    choice(serialSBIT_2,"2")
}
menu(serialFCTL) {
    choice(serialFCTL_None,"None")
    choice(serialFCTL_Hardware,"Hardware")
}
menu(gpibUCMD) {
    choice(gpibUCMD_None,"None")
    choice(gpibUCMD_Device_Clear__DCL_,"Device Clear (DCL)")
    choice(gpibUCMD_Local_Lockout__LL0_,"Local Lockout (LL0)")
    choice(gpibUCMD_Serial_Poll_Disable__SPD_,"Serial Poll Disable (SPD)")
    choice(gpibUCMD_Serial_Poll_Enable__SPE_,"Serial Poll Enable (SPE)")
    choice(gpibUCMD_Unlisten__UNL_,"Unlisten (UNL)")
    choice(gpibUCMD_Untalk__UNT_,"Untalk (UNT)")
}
menu(gpibACMD) {
    choice(gpibACMD_None,"None")
    choice(gpibACMD_Group_Execute_Trig___GET_,"Group Execute Trig. (GET)")
    choice(gpibACMD_Go_To_Local__GTL_,"Go To Local (GTL)")
    choice(gpibACMD_Selected_Dev__Clear__SDC_,"Selected Dev. Clear (SDC)")
    choice(gpibACMD_Take_Control__TCT_,"Take Control (TCT)")
    choice(gpibACMD_Serial_Poll,"Serial Poll")
}
recordtype(asynOctet) {
    include "dbCommon.dbd" 
    field(VAL,DBF_STRING) {
        prompt("Value field (unused)")
        promptgroup(GUI_INPUTS)
        asl(ASL0)
        size(40)
    }
    field(PORT,DBF_STRING) {
        prompt("asyn port")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        initial("")
        size(40)
    }
    field(ADDR,DBF_LONG) {
        prompt("asyn address")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        initial("0")
    }
    field(SOCK,DBF_STRING) {
        prompt("asyn socket address")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        initial("")
        size(40)
    }
    field(TMOD,DBF_MENU) {
        prompt("Transaction mode")
        promptgroup(GUI_COMMON)
        interest(1)
        menu(asynOctetTMOD)
    }
    field(AOUT,DBF_STRING) {
        prompt("Output (command) string")
        promptgroup(GUI_INPUTS)
        asl(ASL0)
        pp(TRUE)
        size(40)
    }
    field(OEOS,DBF_STRING) {
        prompt("Output delimiter")
        promptgroup(GUI_DISPLAY)
        size(40)
        initial("\r")
    }
    field(BOUT,DBF_CHAR) {
        prompt("Output binary data")
        asl(ASL0)
        special(SPC_DBADDR)
        pp(TRUE)
    }
    field(OPTR,DBF_NOACCESS) {
        prompt("Output buffer pointer")
        special(SPC_NOMOD)
        interest(4)
        size(4)
        extra("void *optr")
    }
    field(OMAX,DBF_LONG) {
        prompt("Max. size of output array")
        promptgroup(GUI_DISPLAY)
        special(SPC_NOMOD)
        interest(1)
        initial("512")
    }
    field(NOWT,DBF_LONG) {
        prompt("Number of octets to write")
        promptgroup(GUI_DISPLAY)
        interest(1)
        initial("512")
    }
    field(OFMT,DBF_MENU) {
        prompt("Output format")
        promptgroup(GUI_COMMON)
        interest(1)
        menu(asynOctetFMT)
    }
    field(AINP,DBF_STRING) {
        prompt("Input (response) string")
        promptgroup(GUI_INPUTS)
        asl(ASL0)
        special(SPC_NOMOD)
        size(40)
    }
    field(IEOS,DBF_STRING) {
        prompt("Input Delimiter")
        promptgroup(GUI_DISPLAY)
        initial("\r")
        size(40)
    }
    field(BINP,DBF_CHAR) {
        prompt("Input binary data")
        asl(ASL0)
        special(SPC_DBADDR)
    }
    field(IPTR,DBF_NOACCESS) {
        prompt("Input buffer pointer")
        special(SPC_NOMOD)
        interest(4)
        size(4)
        extra("void *iptr")
    }
    field(IMAX,DBF_LONG) {
        prompt("Max. size of input array")
        promptgroup(GUI_DISPLAY)
        special(SPC_NOMOD)
        interest(1)
        initial("512")
    }
    field(NRRD,DBF_LONG) {
        prompt("Number of bytes to read")
        promptgroup(GUI_DISPLAY)
        interest(1)
    }
    field(NORD,DBF_LONG) {
        prompt("Number of bytes read")
        promptgroup(GUI_DISPLAY)
        special(SPC_NOMOD)
        interest(1)
    }
    field(IFMT,DBF_MENU) {
        prompt("Input format")
        promptgroup(GUI_COMMON)
        interest(1)
        menu(asynOctetFMT)
    }
    field(TMOT,DBF_DOUBLE) {
        prompt("Timeout (sec)")
        promptgroup(GUI_DISPLAY)
        interest(1)
        initial("1.0")
    }
    field(BAUD,DBF_MENU) {
        prompt("Baud rate")
        promptgroup(GUI_COMMON)
        special(SPC_MOD)
        menu(serialBAUD)
        initial("5")
    }
    field(PRTY,DBF_MENU) {
        prompt("Parity")
        promptgroup(GUI_COMMON)
        special(SPC_MOD)
        menu(serialPRTY)
    }
    field(DBIT,DBF_MENU) {
        prompt("Data bits")
        promptgroup(GUI_COMMON)
        special(SPC_MOD)
        menu(serialDBIT)
        initial("3")
    }
    field(SBIT,DBF_MENU) {
        prompt("Stop bits")
        promptgroup(GUI_COMMON)
        special(SPC_MOD)
        menu(serialSBIT)
    }
    field(FCTL,DBF_MENU) {
        prompt("Flow control")
        promptgroup(GUI_COMMON)
        special(SPC_MOD)
        menu(serialFCTL)
    }
    field(UCMD,DBF_MENU) {
        prompt("Universal command")
        promptgroup(GUI_COMMON)
        pp(TRUE)
        interest(1)
        menu(gpibUCMD)
    }
    field(ACMD,DBF_MENU) {
        prompt("Addressed command")
        promptgroup(GUI_COMMON)
        pp(TRUE)
        interest(1)
        menu(gpibACMD)
    }
    field(SPR,DBF_UCHAR) {
        prompt("Serial poll response")
        promptgroup(GUI_INPUTS)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(TB0,DBF_MENU) {
        prompt("Trace error")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        menu(asynOctetTRACE)
    }
    field(TB1,DBF_MENU) {
        prompt("Trace IO device")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        menu(asynOctetTRACE)
    }
    field(TB2,DBF_MENU) {
        prompt("Trace IO filter")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        menu(asynOctetTRACE)
    }
    field(TB3,DBF_MENU) {
        prompt("Trace IO driver")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        menu(asynOctetTRACE)
    }
    field(TB4,DBF_MENU) {
        prompt("Trace flow")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        menu(asynOctetTRACE)
    }
    field(TIB0,DBF_MENU) {
        prompt("Trace IO ASCII")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        menu(asynOctetTRACE)
    }
    field(TIB1,DBF_MENU) {
        prompt("Trace IO escape")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        menu(asynOctetTRACE)
    }
    field(TIB2,DBF_MENU) {
        prompt("Trace IO hex")
        promptgroup(GUI_DISPLAY)
        special(SPC_MOD)
        interest(1)
        menu(asynOctetTRACE)
    }
}

